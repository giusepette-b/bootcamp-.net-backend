using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace TuplasOperadorTernarioDesconstrucaoDeObjeto.Models

{
    public static class OperadorTernario
    {
        public static void Demonstrar()
        {
            Console.WriteLine("=== OPERADOR TERN√ÅRIO EM C# ===\n");

            // ==================================================================
            // OPERADOR TERN√ÅRIO B√ÅSICO - condi√ß√£o ? valor_se_verdadeiro : valor_se_falso
            // ==================================================================

            // 1. Uso b√°sico do operador tern√°rio
            int idade = 20;
            string status = idade >= 18 ? "Maior de idade" : "Menor de idade";
            Console.WriteLine($"1. B√°sico - Idade: {idade}, Status: {status}");

            // 2. Tern√°rio com tipos num√©ricos
            double preco = 100.0;
            double desconto = preco > 50.0 ? preco * 0.1 : 0;
            Console.WriteLine($"2. Num√©rico - Pre√ßo: {preco:C}, Desconto: {desconto:C}");

            // ==================================================================
            // TERN√ÅRIOS ANINHADOS - M√∫ltiplas condi√ß√µes
            // ==================================================================

            // 3. Tern√°rio aninhado - avalia m√∫ltiplas condi√ß√µes
            int nota = 85;
            string conceito = nota >= 90 ? "A" :
                             nota >= 80 ? "B" :
                             nota >= 70 ? "C" :
                             nota >= 60 ? "D" : "F";
            Console.WriteLine($"3. Aninhado - Nota: {nota}, Conceito: {conceito}");

            // ==================================================================
            // TERN√ÅRIO COM CHAMADA DE M√âTODOS
            // ==================================================================

            // 4. Tern√°rio executando m√©todos diferentes
            bool usuarioPremium = true;
            string mensagem = usuarioPremium ? GerarMensagemPremium() : GerarMensagemComum();
            Console.WriteLine($"4. Com m√©todos - {mensagem}");

            // ==================================================================
            // TERN√ÅRIO PARA ATRIBUI√á√ÉO CONDICIONAL
            // ==================================================================

            // 5. Atribui√ß√£o condicional de valores
            string nome = null;
            string nomeExibicao = nome ?? "Visitante"; // Operador null-coalescing
            string saudacao = nomeExibicao.Length > 5 ? nomeExibicao.Substring(0, 5) + "..." : nomeExibicao;
            Console.WriteLine($"5. Atribui√ß√£o - Sauda√ß√£o: Ol√°, {saudacao}!");

            // ==================================================================
            // TERN√ÅRIO EM EXPRESS√ïES COMPLEXAS
            // ==================================================================

            // 6. Tern√°rio em express√µes matem√°ticas
            int quantidade = 3;
            double precoUnitario = 25.0;
            double total = quantidade * precoUnitario;
            double totalComDesconto = total > 50 ? total * 0.9 : total;
            Console.WriteLine($"6. Express√£o - Total: {total:C}, Com desconto: {totalComDesconto:C}");

            // ==================================================================
            // TERN√ÅRIO COM TIPOS DIFERENTES (usando object)
            // ==================================================================

            // 7. Tern√°rio retornando tipos diferentes (cuidado - n√£o recomendado)
            object resultado = idade > 18 ? "Aprovado" : false;
            Console.WriteLine($"7. Tipos diferentes - Resultado: {resultado} ({resultado.GetType().Name})");

            // ==================================================================
            // TERN√ÅRIO VS IF-ELSE - Quando usar cada um
            // ==================================================================

            // 8. Compara√ß√£o tern√°rio vs if-else
            int numero = 10;

            // M√©todo 1: Tern√°rio (para express√µes simples)
            string parOuImpar = numero % 2 == 0 ? "Par" : "√çmpar";

            // M√©todo 2: If-else (para l√≥gica complexa)
            string categoria;
            if (numero == 0)
                categoria = "Zero";
            else if (numero > 0)
                categoria = "Positivo";
            else
                categoria = "Negativo";

            Console.WriteLine($"8. Compara√ß√£o - {numero} √© {parOuImpar} e {categoria}");

            // ==================================================================
            // TERN√ÅRIO EM INITIALIZERS E PROPRIEDADES
            // ==================================================================

            // 9. Tern√°rio em inicializa√ß√£o de objetos
            var config = new Configuracao
            {
                Modo = DateTime.Now.Hour < 18 ? "Dia" : "Noite",
                Tema = DateTime.Now.Hour < 18 ? "Claro" : "Escuro"
            };
            Console.WriteLine($"9. Inicializa√ß√£o - Modo: {config.Modo}, Tema: {config.Tema}");

            // ==================================================================
            // LIMITA√á√ïES E BOAS PR√ÅTICAS
            // ==================================================================

            Console.WriteLine("\nüí° BOAS PR√ÅTICAS:");
            Console.WriteLine("   ‚Ä¢ Use tern√°rio para condi√ß√µes SIMPLES");
            Console.WriteLine("   ‚Ä¢ Evite tern√°rios aninhados complexos");
            Console.WriteLine("   ‚Ä¢ Prefira if-else para l√≥gica complexa");
            Console.WriteLine("   ‚Ä¢ Mantenha a legibilidade acima de tudo");
        }

        private static string GerarMensagemPremium()
        {
            return "Bem-vindo usu√°rio Premium!";
        }

        private static string GerarMensagemComum()
        {
            return "Bem-vindo!";
        }
    }

    public class Configuracao
    {
        public string Modo { get; set; }
        public string Tema { get; set; }
    }
}